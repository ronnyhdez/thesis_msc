---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Appendices

<!-- | **Name** | **Description** | **Resolution** | **Wavelength**                | **Scale** | -->
<!-- |----------------|----------------|----------------|----------------|----------------| -->
<!-- | B4       | Red             | 10 meters      | 664.5nm (S2A) / 665nm (S2B)   | 0.0001    | -->
<!-- | B8       | NIR             | 10 meters      | 835.1nm (S2A) / 833nm (S2B)   | 0.0001    | -->
<!-- | B2       | Blue            | 10 meters      | 496.6nm (S2A) / 492.1nm (S2B) | 0.0001    | -->

<!-- : Harmonized Sentinel-2 Bands {#tbl-harmonized_s2_indices_bands} -->

```{r}
#| label: tbl-state_1km_bitstrings
#| tbl-cap: "state_1km bit strings"
#| echo: false
#| message: false
#| warning: false

library(dplyr)
library(tibble)
library(gt)

tribble(
  ~Parameter, ~Bit, ~State,
  "cloud_state" , "00" , "clear",
  "cloud_state" , "01" , "cloudy",
  "cloud_state" , "10" , "mixed",
  "cloud_state" , "11" , "not set, assumed clear",
  "cloud_shadow_qa" , "1" , "yes", 
  "cloud_shadow_qa" , "0" , "no",
  "land_water_flag" , "000" , "shallow ocean",
  "land_water_flag" , "001" , "land",
  "land_water_flag" , "010" , "ocean coastlines and lake shorelines",
  "land_water_flag" , "011" , "shallow inland water",
  "land_water_flag" , "100" , "ephemeral water",
  "land_water_flag" , "101" , "deep inland water",
  "land_water_flag" , "110" , "continental/moderate ocean",
  "land_water_flag" , "111" , "deep ocean",
  "aerosol_quantity" , "00" , "climatology",
  "aerosol_quantity" , "01" , "low",
  "aerosol_quantity" , "10" , "average",
  "aerosol_quantity" , "11" , "high",
  "cirrus_detected" , "00" , "none",
  "cirrus_detected" , "01" , "small",
  "cirrus_detected" , "10" , "average",
  "cirrus_detected" , "11" , "high",
  "cloud_flag_qa" , "1", "cloud", 
  "cloud_flag_qa" , "0", "no cloud",
  "fire_flag_qa" , "1", "fire",
  "fire_flag_qa" , "0", "no fire",
  "snow_ice_flag_qa" , "1", "yes", 
  "snow_ice_flag_qa" , "0", "no",
  "pixel_adjacent_cloud_qa" , "1", "yes", 
  "pixel_adjacent_cloud_qa" , "0", "no", 
  "salt_pan_qa", "1", "yes",
  "salt_pan_qa" , "0", "no",
  "snow_mask_qa" ,  "1", "yes",
  "snow_mask_qa" ,  "0", "no"
) %>% 
  select(Bit, State) %>% 
  gt() %>% 
  tab_row_group(
    label = md("**Snow Mask**"),
    rows = 33:34
  ) %>% 
  tab_row_group(
    label = md("**Salt Pan Cloud**"),
    rows = 31:32
  ) %>%
  tab_row_group(
    label = md("**Pixel adjacent Cloud**"),
    rows = 29:30
  ) %>% 
  tab_row_group(
    label = md("**Snow Ice Flag**"),
    rows = 27:28
  ) %>% 
  tab_row_group(
    label = md("**Fire Flag**"),
    rows = 25:26
  ) %>% 
  tab_row_group(
    label = md("**Cloud Flag**"),
    rows = 23:24
  ) %>% 
  tab_row_group(
    label = md("**Cirrus Detected**"),
    rows = 19:22
  ) %>% 
  tab_row_group(
    label = md("**Aerosol Quantity**"),
    rows = 15:18
  ) %>% 
  tab_row_group(
    label = md("**Land Water**"),
    rows = 7:14
  ) %>% 
  tab_row_group(
    label = md("**Cloud Shadow**"),
    rows = 5:6
  ) %>% 
  tab_row_group(
    label = md("**Cloud State**"),
    rows = 1:4
  ) %>% 
  cols_align(align = "center", columns = everything())
```

```{r}
#| label: tbl-qc_scan_bit_strings
#| tbl-cap: "qc_scan bit strings"
#| echo: false
#| message: false
#| warning: false

tribble(
  ~Parameter, ~Bits, ~State,
  "modland" , "00" , "ideal quality - all bands",
  "modland" , "01" , "less than ideal quality - some or all bands",
  "modland" , "10" , "product not produced due to cloud effects",
  "modland" , "11" , "product not produced for other reasons",
  "bands" , "0000" , "highest_quality",
  "bands" , "0111" , "noisy detector",
  "bands" , "1000" , "dead detector, data interpolated in L1B",
  "bands" , "1001" , "solar zenith >= 86 degrees",
  "bands" , "1010" , "solar zenith >= 85 and < 86 degrees",
  "bands" , "1011" , "missing input",
  "bands" , "1100" , "internal constant used",
  "bands" , "1101" , "correction out of bounds",
  "bands" , "1110" , "L1B data faulty",
  "bands" , "1111" , "not processed due to deep ocean or clouds",
  "atmospheric_correction" , "0", "no",
  "atmospheric_correction" , "1", "yes",
  "adjacency_correction" ,  "0", "no",
  "adjacency_correction" ,  "1", "yes"
) %>% 
  select(Bits, State) %>% 
  gt() %>% 
  tab_row_group(
    label = md("**Adjacency Correction**"),
    rows = 17:18
  ) %>% 
  tab_row_group(
    label = md("**Atmospheric Correction**"),
    rows = 15:16
  ) %>% 
  tab_row_group(
    label = md("**Band quality (apply for all bands)**"),
    rows = 5:14
  ) %>% 
  tab_row_group(
    label = md("**Modland**"),
    rows = 1:4
  ) %>% 
  cols_align(align = "center", columns = everything()) %>% 
  tab_style(
    style = list(
      cell_fill(color = "#B3B3B3")
    ),
    locations = cells_body(
      columns = State,
      rows = State %in% c("ideal quality - all bands",
                          "highest_quality",
                          "yes")
    )
  )
```

## Complete LM metrics

```{r lm_monthly_table}
#| label: tbl-complete_lm_monthly_results
#| tbl-cap: "Summary of Linear models for GPP estimation using the vegetation indices on a monthly basis (per site)."
#| echo: false
#| message: false
#| warning: false

# Run the lm models
source("scripts/lm_preparation.R")

# Create table with complete models metrics
bind_rows(evi_glance_monthly,
          ndvi_glance_monthly,
          nirv_glance_monthly,
		  # kndvi_glance,
		  cci_glance_monthly) %>% 
  select(site, index, adj.r.squared, 
         statistic, AIC, BIC,  p.value) %>% 
  group_by(site) %>% 
  arrange(desc(adj.r.squared)) %>% 
  gt(
    rowname_col = "index",
    groupname_col = "site"
  ) %>% 
  fmt_number(
    columns = 3:8,
    decimals = 3) %>% 
  fmt_scientific(
    columns = 9,
    decimals = 3
  ) %>% 
  tab_options(
    row_group.background.color = "#E9E0E1",
    row_group.font.weight = "bold"
  ) 
```

## Complete GAM metrics

```{r}
#| echo: false
#| message: false
#| warning: false
source("scripts/gam_preparation.R")
```

### Daily GAM metrics

```{r}
#| label: tbl-gam_daily_model_results_complete_a
#| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"
#| echo: false
#| message: false
#| warning: false
all_sites_gam_daily_complete %>% 
  bind_rows(vis_sites_gam_daily_complete) %>% 
  arrange(AIC) %>% 
  gt()
```


```{r}
#| label: tbl-gam_daily_model_results_complete_b
#| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"
#| echo: false
#| message: false
#| warning: false
all_vis_gam_daily_complete %>% 
  bind_rows(all_sites_all_vis_gam_daily_complete) %>% 
  arrange(AIC) %>% 
  gt()
```

### Weekly GAM metrics

```{r}
#| label: tbl-gam_weekly_model_results_complete_a 
#| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"
#| echo: false
#| message: false
#| warning: false
all_sites_gam_weekly_complete %>% 
  bind_rows(vis_sites_gam_weekly_complete) %>% 
  arrange(AIC) %>% 
  gt()
```

```{r}
#| label: tbl-gam_daily_model_results_complete
#| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"
#| echo: false
#| message: false
#| warning: false
all_vis_gam_weekly_complete %>% 
  bind_rows(all_sites_all_vis_gam_weekly_complete) %>% 
  arrange(AIC) %>% 
  gt()
```

### Monthly GAM metrics

```{r}
#| label: tbl-gam_monthly_model_results_complete_a
#| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"
#| echo: false
#| message: false
#| warning: false
all_sites_gam_monthly_complete %>% 
  bind_rows(vis_sites_gam_monthly_complete) %>% 
  arrange(AIC) %>% 
  gt()
```


```{r}
#| label: tbl-gam_monthly_model_results_complete_b
#| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"
#| echo: false
#| message: false
#| warning: false
all_vis_gam_monthly_complete %>% 
  bind_rows(all_sites_all_vis_gam_monthly_complete) %>% 
  arrange(AIC) %>% 
  gt()
```



<!-- #### Individual Daily GAM models -->

<!-- **The following tables represent the results of each model as gpp~VI and it's not segregated by site.** -->

<!-- ```{r} -->
<!-- #| label: tbl-gam_model_results_pvalue -->
<!-- #| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"  -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- bind_rows(s_table_ndvi_daily, s_table_evi_daily,  -->
<!--           s_table_nirv_daily, s_table_kndvi_daily, -->
<!--           s_table_cci_daily) %>%  -->
<!--   tibble::rownames_to_column("Model response variable") %>%  -->
<!--   gt() %>%  -->
<!--   tab_header( -->
<!--     title = "Individual daily GAM models ouput", -->
<!--     subtitle = "MODIS derived indices for all sites" -->
<!--   ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| label: tbl-gam_model_results -->
<!-- #| tbl-cap: "Summary of the individual GAM models for daily GPP estimation using the VIs"  -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- bind_rows(p_table_evi_daily, p_table_ndvi_daily,  -->
<!--           p_table_nirv_daily, p_table_kndvi_daily, -->
<!--           p_table_cci_daily) %>%  -->
<!--   tibble::rownames_to_column("parameter") %>%  -->
<!--   bind_cols( -->
<!--     tribble( -->
<!--       ~index, ~r_squared, -->
<!--       "evi", summ_evi_daily[["r.sq"]], -->
<!--       "ndvi", summ_ndvi_daily[["r.sq"]], -->
<!--       "nirv", summ_nirv_daily[["r.sq"]], -->
<!--       "kndvi", summ_kndvi_daily[["r.sq"]], -->
<!--       "cci", summ_cci_daily[["r.sq"]] -->
<!--     )  -->
<!--   ) %>%  -->
<!--   relocate(index) %>%  -->
<!--   arrange(desc(r_squared)) %>%  -->
<!--   gt() %>%  -->
<!--   tab_header( -->
<!--     title = "GAM daily models ouput", -->
<!--     subtitle = "MODIS derived indices for all sites" -->
<!--   ) -->
<!-- ``` -->

<!--  - Borden have the most complex models given the nature of its data values -->
<!--  - In that kind of data behaviour, EVI seems to not perform as well  -->


<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->



<!-- # **Daily models outputs** -->
<!-- summ_single_daily <- summary(single_vis_daily) -->
<!-- summ_single_daily -->



<!-- all_vis_gam <- ind_sites %>% -->
<!--   select(-kndvi_mean) %>% -->
<!--   nest(data = c(-site)) %>% -->
<!--   mutate( -->
<!--     fit = map(data, ~ lm(gpp_dt_vut_ref ~ evi_mean + -->
<!--                            ndvi_mean + nirv_mean + -->
<!--                            cci_mean, data = .x)), -->
<!--     tidied = map(fit, tidy), -->
<!--     glanced = map(fit, glance), -->
<!--     augmented = map(fit, augment) -->
<!--   ) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- gratia::draw(single_vis_daily,  -->
<!--              scales = "fixed", -->
<!--              residuals = TRUE)  -->

<!-- gratia::appraise(single_vis_daily) -->
<!-- ``` -->


















<!-- #### SD GAM model with smooth terms for all covariates -->

<!-- **SD: Single Daily** -->

<!--  - The following results are including ndvi and kndvi with smooth terms, but  -->
<!--  they don't show a non-linear relation with GPP. -->
<!--  - I changed the `k` parameter several times, but no improvements arised. -->
<!--  - The GAM model was specified as follows: -->
<!--   - `gpp ~ s(ndvi_mean, k = 10) + s(evi_mean, k = 10) + s(nirv_mean, k = 10) + s(kndvi_mean, k = 10) + s(cci_mean, k = 10)` -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- # Model with smooth term for all covariates -->
<!-- single_vis_daily <- gam(gpp_dt_vut_ref ~ s(ndvi_mean, k = 9) + -->
<!--                           # s(kndvi_mean, k = 9) + -->
<!--                           s(evi_mean, k = 50) + -->
<!--                           s(nirv_mean, k = 50) + -->
<!--                           s(cci_mean, k = 50), -->
<!--                         data = daily_gam,  -->
<!--                         method = 'REML') -->

<!-- # **Daily models outputs** -->
<!-- summ_single_daily <- summary(single_vis_daily) -->
<!-- summ_single_daily -->

<!-- gam.check(single_vis_daily) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- gratia::draw(single_vis_daily,  -->
<!--              scales = "fixed", -->
<!--              residuals = TRUE)  -->

<!-- gratia::appraise(single_vis_daily) -->
<!-- ``` -->

<!-- #### SD GAM model with smooth terms for all covariates and including site -->

<!-- **SD: Single Daily** -->

<!--  - This model included `site` as covariate (without smooth term) -->
<!--  - Including the `site` term improves the R2 with respect to the above model -->
<!--  from `0.652` to `0.727` -->
<!--  - The following results are including ndvi and kndvi with smooth terms, but  -->
<!--  they don't show a non-linear relation with GPP. -->
<!--  - I changed the `k` parameter several times, but no improvements arised. -->
<!--  - The GAM model was specified as follows: -->
<!--   - `gpp ~ s(ndvi_mean, k = 10) + s(evi_mean, k = 10) + s(nirv_mean, k = 10) + s(kndvi_mean, k = 10) + s(cci_mean, k = 10)` -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- single_vis_daily <- gam(gpp_dt_vut_ref ~ s(ndvi_mean, k = 9) + -->
<!--                           # s(kndvi_mean, k = 9) + -->
<!--                           s(evi_mean, k = 50) + -->
<!--                           s(nirv_mean, k = 50) + -->
<!--                           s(cci_mean, k = 50) + -->
<!--                           site, -->
<!--                         data = daily_gam,  -->
<!--                         method = 'REML') -->

<!-- # **Daily models outputs** -->
<!-- summ_single_daily <- summary(single_vis_daily) -->
<!-- summ_single_daily -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- gratia::draw(single_vis_daily,  -->
<!--              scales = "fixed", -->
<!--              residuals = TRUE)  -->

<!-- gratia::appraise(single_vis_daily) -->
<!-- ``` -->

<!-- #### SD GAM model with smooth terms just for evi, nirv, cci -->

<!--  - On the next model, I remove kndvi and ndvi from the non-linear model -->
<!--  specification. -->
<!--  - `site` included as covariate -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- single_vis_daily <- gam(gpp_dt_vut_ref ~ ndvi_mean + -->
<!--                           # kndvi_mean + -->
<!--                           s(evi_mean) + -->
<!--                           s(nirv_mean) + -->
<!--                           s(cci_mean) + -->
<!--                           site, -->
<!--                         data = daily_gam,  -->
<!--                         method = 'REML') -->

<!-- # **Daily models outputs** -->
<!-- summ_single_daily <- summary(single_vis_daily) -->
<!-- summ_single_daily -->

<!-- # check <- residuals(single_vis_daily) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- gratia::draw(single_vis_daily,  -->
<!--              scales = "fixed", -->
<!--              residuals = TRUE)  -->

<!-- gratia::appraise(single_vis_daily) -->

<!-- # **Code to create table if single model is selected** -->
<!-- # # Tables for comparison (this can be a function) -->
<!-- # # s_table_evi_daily <-  -->
<!-- # summ_single_daily[["s.table"]] %>%  -->
<!-- #   as.data.frame() %>%  -->
<!-- #   tibble::rownames_to_column("parameter") %>%  -->
<!-- #   gt() %>%  -->
<!-- #   tab_header( -->
<!-- #     title = "GAM daily models ouput", -->
<!-- #     subtitle = "MODIS derived indices for all sites" -->
<!-- #   ) -->
<!-- #  -->
<!-- # summ_single_daily[["p.table"]] %>%  -->
<!-- #   as.data.frame() %>%  -->
<!-- #   tibble::rownames_to_column("parameter") %>%  -->
<!-- #   bind_cols( -->
<!-- #     tribble( -->
<!-- #       ~index, ~r_squared, -->
<!-- #       "single", summ_single_daily[["r.sq"]] -->
<!-- #     )  -->
<!-- #   ) %>%  -->
<!-- #   relocate(index) %>%  -->
<!-- #   arrange(desc(r_squared)) %>%  -->
<!-- #   gt() %>%  -->
<!-- #   tab_header( -->
<!-- #     title = "Single daily GAM model ouput", -->
<!-- #     subtitle = "MODIS derived indices for all sites" -->
<!-- #   ) -->
<!-- ``` -->

<!-- #### SD GAM model with smooth terms by site -->

<!--  - On the next model, I included all VIs with a smooth term by site. -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- model_vis_daily <- gam(gpp_dt_vut_ref ~  -->
<!--                          s(ndvi_mean, by = site) + -->
<!--                          # s(kndvi_mean, by = site) + -->
<!--                          s(evi_mean, by = site) + -->
<!--                          s(nirv_mean, by = site) + -->
<!--                          s(cci_mean, by = site), -->
<!--                        data = daily_gam,  -->
<!--                        method = 'REML') -->

<!-- summary(model_vis_daily) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- gratia::draw(model_vis_daily,  -->
<!--              # scales = "fixed", -->
<!--              residuals = TRUE, -->
<!--              ncol = 3) + -->
<!--   theme_bw(base_size = 10) -->

<!-- gratia::appraise(model_vis_daily) -->
<!-- ``` -->

<!-- #### Individual Weekly GAM models -->

<!-- ```{r} -->
<!-- #| label: tbl-weekly_gam_model_results_pvalue -->
<!-- #| tbl-cap: "Summary of the individual GAM models for GPP estimation using the VIs"  -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- weekly_gam <- weekly_plot_500 %>%  -->
<!--   pivot_wider(names_from = index, values_from = value) -->

<!-- # Weekly evi -->
<!-- model_evi_weekly <- gam(gpp_dt_vut_ref ~ s(evi_mean),  -->
<!--                         data = weekly_gam,  -->
<!--                         method = 'REML') -->

<!-- # Weekly ndvi -->
<!-- model_ndvi_weekly <- gam(gpp_dt_vut_ref ~ s(ndvi_mean),  -->
<!--                          data = weekly_gam,  -->
<!--                          method = 'REML') -->

<!-- # Weekly nirv -->
<!-- model_nirv_weekly <- gam(gpp_dt_vut_ref ~ s(nirv_mean),  -->
<!--                          data = weekly_gam,  -->
<!--                          method = 'REML') -->

<!-- # Weekly kndvi -->
<!-- model_kndvi_weekly <- gam(gpp_dt_vut_ref ~ s(kndvi_mean),  -->
<!--                          data = weekly_gam,  -->
<!--                          method = 'REML') -->

<!-- # Weekly cci -->
<!-- model_cci_weekly <- gam(gpp_dt_vut_ref ~ s(cci_mean),  -->
<!--                          data = weekly_gam,  -->
<!--                          method = 'REML') -->

<!-- # **Weekly models outputs** -->
<!-- summ_evi_weekly <- summary(model_evi_weekly) -->
<!-- summ_ndvi_weekly <- summary(model_ndvi_weekly) -->
<!-- summ_nirv_weekly <- summary(model_nirv_weekly) -->
<!-- summ_kndvi_weekly <- summary(model_kndvi_weekly) -->
<!-- summ_cci_weekly <- summary(model_cci_weekly) -->

<!-- # Tables for comparison (rhis can be a function) -->
<!-- s_table_evi_weekly <- summ_evi_weekly[["s.table"]] %>% as.data.frame() -->
<!-- s_table_ndvi_weekly <- summ_ndvi_weekly[["s.table"]] %>% as.data.frame() -->
<!-- s_table_nirv_weekly <- summ_nirv_weekly[["s.table"]] %>% as.data.frame() -->
<!-- s_table_kndvi_weekly <- summ_kndvi_weekly[["s.table"]] %>% as.data.frame() -->
<!-- s_table_cci_weekly <- summ_cci_weekly[["s.table"]] %>% as.data.frame() -->

<!-- bind_rows(s_table_ndvi_weekly, s_table_evi_weekly,  -->
<!--           s_table_nirv_weekly, s_table_kndvi_weekly, -->
<!--           s_table_cci_weekly) %>%  -->
<!--   tibble::rownames_to_column("parameter") %>%  -->
<!--   gt() %>%  -->
<!--   tab_header( -->
<!--     title = "GAM weekly models ouput", -->
<!--     subtitle = "MODIS derived indices for all sites" -->
<!--   ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| label: tbl-weekly_gam_model_results -->
<!-- #| tbl-cap: "Summary of the individual GAM models for GPP estimation using the VIs"  -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- p_table_evi_weekly <- summ_evi_weekly[["p.table"]] %>% as.data.frame() -->
<!-- p_table_ndvi_weekly <- summ_ndvi_weekly[["p.table"]] %>% as.data.frame() -->
<!-- p_table_nirv_weekly <- summ_nirv_weekly[["p.table"]] %>% as.data.frame() -->
<!-- p_table_kndvi_weekly <- summ_kndvi_weekly[["p.table"]] %>% as.data.frame() -->
<!-- p_table_cci_weekly <- summ_cci_weekly[["p.table"]] %>% as.data.frame() -->

<!-- bind_rows(p_table_evi_weekly, p_table_ndvi_weekly,  -->
<!--           p_table_nirv_weekly, p_table_kndvi_weekly, -->
<!--           p_table_cci_weekly) %>%  -->
<!--   tibble::rownames_to_column("parameter") %>%  -->
<!--   bind_cols( -->
<!--     tribble( -->
<!--       ~index, ~r_squared, -->
<!--       "evi", summ_evi_weekly[["r.sq"]], -->
<!--       "ndvi", summ_ndvi_weekly[["r.sq"]], -->
<!--       "nirv", summ_nirv_weekly[["r.sq"]], -->
<!--       "kndvi", summ_kndvi_weekly[["r.sq"]], -->
<!--       "cci", summ_cci_weekly[["r.sq"]] -->
<!--     )  -->
<!--   ) %>%  -->
<!--   relocate(index) %>%  -->
<!--   arrange(desc(r_squared)) %>%  -->
<!--   gt() %>%  -->
<!--   tab_header( -->
<!--     title = "GAM weekly models ouput", -->
<!--     subtitle = "MODIS derived indices for all sites" -->
<!--   ) -->
<!-- ``` -->

<!-- #### SW GAM model with smooth terms for all covariates -->

<!-- **SW: Single Weekly GAM model** -->

<!--  - The following results are including nirv, ndvi and kndvi, but they don't  -->
<!--  show a non-linear relation with GPP -->
<!--  - On the next model, I remove kndvi and ndvi from the non-linear model -->
<!--  specification. -->
<!--  - The GAM model was specified as follows: -->
<!--   - `gpp ~ s(ndvi_mean) + s(evi_mean) + s(nirv_mean) + s(kndvi_mean) + s(cci_mean)` -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- single_vis_weekly <- gam(gpp_dt_vut_ref ~ s(ndvi_mean) + -->
<!--                           s(kndvi_mean) + -->
<!--                           s(evi_mean) + -->
<!--                           s(nirv_mean) + -->
<!--                           s(cci_mean), -->
<!--                         data = weekly_gam,  -->
<!--                         method = 'REML') -->

<!-- # **Daily models outputs** -->
<!-- summ_single_weekly <- summary(single_vis_weekly) -->
<!-- summ_single_weekly -->

<!-- # gam.check(single_vis_weekly) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- gratia::draw(single_vis_weekly,  -->
<!--              # scales = "fixed", -->
<!--              residuals = TRUE)  -->

<!-- gratia::appraise(single_vis_weekly) -->
<!-- ``` -->

<!-- #### SW GAM model with smooth terms for all covariates and including site -->

<!-- **SW: Single Weekly GAM model** -->

<!--  - The following results are including nirv, ndvi and kndvi, but they don't  -->
<!--  show a non-linear relation with GPP -->
<!--  - On the next model, I remove kndvi and ndvi from the non-linear model -->
<!--  specification. -->
<!--  - The GAM model was specified as follows: -->
<!--   - `gpp ~ s(ndvi_mean) + s(evi_mean) + s(nirv_mean) + s(kndvi_mean) + s(cci_mean)` -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- weekly_gam <- weekly_gam %>%  -->
<!--   mutate(site = as.factor(site)) -->

<!-- single_vis_weekly <- gam(gpp_dt_vut_ref ~ s(ndvi_mean) + -->
<!--                            s(evi_mean) + -->
<!--                            s(nirv_mean)+ -->
<!--                            s(kndvi_mean) + -->
<!--                            s(cci_mean) + -->
<!--                            site, -->
<!--                          data = weekly_gam,  -->
<!--                          method = 'REML') -->

<!-- summary(single_vis_weekly) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- # ggplot(aes(y = gpp_dt_vut_ref, x = ndvi_mean), data = weekly_gam) + -->
<!-- #   geom_point() + -->
<!-- #   geom_smooth(method = "gam") + -->
<!-- #   facet_wrap(~site) -->
<!-- #  -->
<!-- # ggplot(aes(y = gpp_dt_vut_ref, kndvi_mean), data = weekly_gam) + -->
<!-- #   geom_point() + -->
<!-- #   geom_smooth(method = "gam") + -->
<!-- #   facet_wrap(~site) -->
<!-- #  -->
<!-- # ggplot(aes(y = gpp_dt_vut_ref, evi_mean), data = weekly_gam) + -->
<!-- #   geom_point() + -->
<!-- #   geom_smooth(method = "gam") + -->
<!-- #   facet_wrap(~site) -->

<!-- gratia::draw(single_vis_weekly,  -->
<!--              scales = "fixed", -->
<!--              residuals = TRUE)  -->

<!-- gratia::appraise(single_vis_weekly) -->
<!-- ``` -->

<!-- #### SW GAM model with smooth terms by site -->

<!--  - On the next model, I included all VIs with a smooth term by site. -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- weekly_gam <- weekly_gam %>%  -->
<!--   mutate(site = as.factor(site)) -->

<!-- single_vis_weekly <- gam(gpp_dt_vut_ref ~  -->
<!--                          s(ndvi_mean, by = site) + -->
<!--                          s(kndvi_mean, by = site) + -->
<!--                          s(evi_mean, by = site) + -->
<!--                          s(nirv_mean, by = site) + -->
<!--                          s(cci_mean, by = site), -->
<!--                          data = weekly_gam,  -->
<!--                          method = 'REML') -->

<!-- summary(single_vis_weekly) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- gratia::draw(single_vis_weekly,  -->
<!--              # scales = "fixed", -->
<!--              residuals = TRUE)  -->

<!-- gratia::appraise(single_vis_weekly) -->
<!-- ``` -->

